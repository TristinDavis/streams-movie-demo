import com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.14.2"
  }
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'idea'

  repositories {
    jcenter()
    maven {
      url 'http://packages.confluent.io/maven/'
    }
  }
}

project(':core') {

  apply plugin: "com.commercehub.gradle.plugin.avro"

  avro {
    stringType = "CharSequence"
  }

  dependencies {
    compile 'org.apache.avro:avro:1.8.2'
    compile 'org.apache.kafka:kafka-clients:1.1.0'
    compile 'javax.json:javax.json-api:1.1.2'
    runtime 'org.glassfish:javax.json:1.1.2'
    compile 'io.confluent:kafka-streams-avro-serde:4.1.0'
  }

}

project(':loader') {
  apply plugin: 'groovy'
  dependencies {
    compile project(':core')
    compile 'org.codehaus.groovy:groovy-all:2.4.15'
  }

  def env = System.getenv()

  task streamJsonRatings(type: JavaExec) {
    main = 'JSONRatingStreamer'
    classpath = sourceSets.main.runtimeClasspath
    args = [env['KAFKA_BOOTSTRAP_SERVERS'] ?: 'localhost:9092']
  }

  task streamAvroRatings(type: JavaExec) {
    main = 'AvroRatingStreamer'
    classpath = sourceSets.main.runtimeClasspath
    args = [env['KAFKA_BOOTSTRAP_SERVERS'] ?: 'localhost:9092']
  }

  task loadAvroMovies(type: JavaExec) {
    main = 'AvroMovieLoader'
    classpath = sourceSets.main.runtimeClasspath
    args "${projectDir}/data/movies.dat"
    args = [env['KAFKA_BOOTSTRAP_SERVERS'] ?: 'localhost:9092']
  }


}

project(':streams') {

  dependencies {
    compile project(':core')

    compile 'org.apache.kafka:kafka-streams:1.1.0'

//  compile 'io.confluent:kafka-avro-serializer:3.3.0'
//  compile 'io.confluent:kafka-schema-registry-client:3.3.0'
  }

}





